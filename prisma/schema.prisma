datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  role          Role      @default(USER)
  company       Company?  @relation(fields: [companyId], references: [id])
  companyId     String?
  projects      ProjectMember[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}



enum Role {
  ADMIN
  USER
}

model Company {
  id          String   @id @default(cuid())
  name        String
  industry    String?
  email       String?
  phone       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  projects    Project[]
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  status      ProjectStatus @default(PENDING)
  company     Company  @relation(fields: [companyId], references: [id])
  companyId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ProjectStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  ON_HOLD
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  company       Company?  @relation(fields: [companyId], references: [id])
  companyId     String?
  projects      ProjectMember[]
  sessions      Session[]
}

enum Role {
  ADMIN
  USER
  MANAGER
}

model Company {
  id          String    @id @default(cuid())
  name        String
  industry    String?
  email       String?
  phone       String?
  users       User[]
  projects    Project[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Project {
  id          String         @id @default(cuid())
  name        String
  description String?
  status      ProjectStatus  @default(PENDING)
  company     Company       @relation(fields: [companyId], references: [id])
  companyId   String
  members     ProjectMember[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model ProjectMember {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  project   Project   @relation(fields: [projectId], references: [id])
  projectId String
  role      ProjectRole @default(MEMBER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([userId, projectId])
}

enum ProjectRole {
  OWNER
  ADMIN
  MEMBER
}

enum ProjectStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  ON_HOLD
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}